// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  cpf               String            @id @default("00000000000")
  username          String?           @unique
  email             String            @unique
  senha             String
  nome              String
  sobrenome         String
  dataNascimento    DateTime
  telefone          String?
  celular           String?
  cargo             String            @default("Jogador")
  rank              Int               @default(0)
  classe            String            @default("Classe 6")

  disponibilidade   Disponibilidade[] @relation("jogador")
  campeonatos       Campeonatos[]     @relation("criador")
  inscricoes        Inscricao[]       @relation("jogador")

  @@map("users")
}



model Disponibilidade {
  id          Int         @id @default(autoincrement())
  id_jogador  String      @unique
  diaHora     DateTime

  jogador     User        @relation("jogador", fields: [id_jogador], references: [cpf])

  @@map("disponibilidade")
}



model Campeonatos {
  id              String      @id @default(uuid())
  id_criador      String
  nome            String      @unique
  descricao       String?
  regras          String
  classe          String      @default("aberto")
  numJogadores    Int
  sets            Int         @default(3)
  premiacao       String?
  local           String?
  dataInscricao   DateTime
  dataInicio      DateTime
  dataFim         DateTime
  id_status       Int         @default(1)

  criador         User        @relation("criador",  fields: [id_criador], references: [cpf])
  status          Status      @relation("status",   fields: [id_status],  references: [id])
  inscricoes      Inscricao[] @relation("campeonato")
  chaveamentos    Partidas[]  @relation("campeonato")
  quadras         Quadras[]   @relation("campeonato")
  horarios        Horarios[]  @relation("campeonato")


  // tabelas         Tabela[]    @relation("campeonato")
  // partidas        Partida[]   @relation("campeonato")

  @@map("campeonatos")
}



model Status {
  id              Int         @id @default(autoincrement())
  nome            String      @default("pendente")

  campeonato      Campeonatos[]   @relation("status")

  @@map("status")
}



model Inscricao {
  id              Int         @id @default(autoincrement())
  id_campeonato   String
  id_jogador      String
  situacao        String      @default("pendente")
  dataInscricao   DateTime    @default(now())

  campeonato      Campeonatos @relation("campeonato", fields: [id_campeonato],  references: [id])
  jogador         User        @relation("jogador",    fields: [id_jogador],     references: [cpf])
  chavJog1        Partidas[]  @relation("jogador1")
  chavJog2        Partidas[]  @relation("jogador2")

  // tabelas         Tabela[]    @relation("inscricao")

  @@map("inscricao")
}



model Partidas {
  id              Int         @id @default(autoincrement())
  id_campeonato   String
  chave           String
  id_jogador1     Int?
  id_jogador2     Int?
  id_pontuacao1   Int
  id_pontuacao2   Int
  id_vencedor     Int?
  dataPartida     DateTime?
  id_data         Int?
  id_local        Int?

  campeonato      Campeonatos @relation("campeonato", fields: [id_campeonato],  references: [id])
  jogador1        Inscricao?  @relation("jogador1",   fields: [id_jogador1],    references: [id])
  jogador2        Inscricao?  @relation("jogador2",   fields: [id_jogador2],    references: [id])
  placar1         Placar      @relation("placar1",    fields: [id_pontuacao1],  references: [id])
  placar2         Placar      @relation("placar2",    fields: [id_pontuacao2],  references: [id])
  quadra          Quadras?    @relation("quadra",     fields: [id_local],       references: [id])
  data            Horarios?   @relation("horario",    fields: [id_data],        references: [id])
  
  @@map("partidas")
}



model Placar {
  id              Int         @id @default(autoincrement())
  set1            Int       @default(-1)
  set2            Int       @default(-1)
  set3            Int       @default(-1)
  set4            Int       @default(-1)
  set5            Int       @default(-1)
  tiebreak1       Boolean   @default(false)
  tiebreak2     	Boolean   @default(false)
  tiebreak3     	Boolean   @default(false)
  tiebreak4     	Boolean   @default(false)
  tiebreak5     	Boolean   @default(false)


  PartidasJog1 Partidas[] @relation("placar1")
  PartidasJog2 Partidas[] @relation("placar2")
  
  @@map("placar")
}



model  Quadras {
  id              Int           @id @default(autoincrement())
  id_campeonato   String
  nome            String

  campeonato      Campeonatos   @relation("campeonato", fields: [id_campeonato], references: [id])
  partidas        Partidas[]    @relation("quadra")
  
  @@map("quadras")
}



model  Horarios {
  id              Int           @id @default(autoincrement())
  id_campeonato   String
  horario         String

  campeonato      Campeonatos   @relation("campeonato", fields: [id_campeonato], references: [id])
  partidas        Partidas[]    @relation("horario")
  
  @@map("horarios")
}





// model Tabela {
//   id              Int         @id @default(autoincrement())
//   id_campeonato   String      @unique
//   id_jogador      Int         @unique
//   posicao         Int         @default(0)
//   pontos          Int         @default(0)
//   vitorias        Int         @default(0)
//   derrotas        Int         @default(0)

//   campeonato      Campeonatos @relation("campeonato", fields: [id_campeonato], references: [id])
//   inscricao       Inscricao   @relation("inscricao", fields: [id_jogador], references: [id])


//   @@map("tabela")
// }



// model Partida {
//   id              Int         @id @default(autoincrement())
//   id_campeonato   String
//   id_jogador1     Int         @unique
//   id_jogador2     Int         @unique
//   id_vencedor     Int?
//   dataPartida     DateTime?

//   campeonato      Campeonatos @relation("campeonato", fields: [id_campeonato], references: [id])
//   jogador1        Inscricao   @relation("jogador1", fields: [id_jogador1], references: [id])
//   jogador2        Inscricao   @relation("jogador2", fields: [id_jogador2], references: [id])
//   chaveamento     Chaveamento? @relation("chaveamento")
  

//   @@map("partida")
// }

